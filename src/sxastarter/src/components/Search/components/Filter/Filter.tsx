// This component was generated by @sitecore-search/cli

import { useSearchResultsActions, useSearchResultsSelectedFilters } from '@sitecore-search/react';
import { SearchResultsStoreSelectedFacet } from '@sitecore-search/widgets';

const buildRangeLabel = (min: number | undefined, max: number | undefined): string => {
  return typeof min === 'undefined'
    ? `< $${max}`
    : typeof max === 'undefined'
    ? ` > $${min}`
    : `$${min} - $${max}`;
};

const buildFacetLabel = (selectedFacet: SearchResultsStoreSelectedFacet) => {
  if ('min' in selectedFacet || 'max' in selectedFacet) {
    return `${buildRangeLabel(selectedFacet.min, selectedFacet.max)}`;
  }
  return `${selectedFacet.valueLabel}`;
};

const Filters = () => {
  const selectedFacetsFromApi = useSearchResultsSelectedFilters();
  const { onRemoveFilter, onClearFilters } = useSearchResultsActions();
  return selectedFacetsFromApi.length > 0 ? (
    <div className="sitecore-filter-container">
      <div className="sitecore-filter-header-container">
        <h3 className="sitecore-filter-header">Filters</h3>
        <button onClick={onClearFilters} className="sitecore-clear-filters">
          Clear All
        </button>
      </div>
      <div className="sitecore-selected-filters-list">
        {selectedFacetsFromApi.map((selectedFacet) => (
          <button
            key={`${selectedFacet.facetId}${selectedFacet.facetLabel}${selectedFacet.valueLabel}`}
            onClick={() => onRemoveFilter(selectedFacet)}
            className="sitecore-selected-filters-list-item"
          >
            {buildFacetLabel(selectedFacet)}
          </button>
        ))}
      </div>
    </div>
  ) : (
    <></>
  );
};
export default Filters;
