// This component was generated by @sitecore-search/cli

import { CheckIcon } from '@radix-ui/react-icons';
import { useSearchResultsActions } from '@sitecore-search/react';
import type { SearchResponseFacet } from '@sitecore-search/react';
import {
  AccordionFacets,
  FacetItem,
  RangeFacet,
  SearchResultsAccordionFacets,
  SearchResultsFacetValueRange,
} from '@sitecore-search/ui';

type SearchFacetsProps = {
  facets: SearchResponseFacet[];
};

type PriceFacetProps = {
  min: number;
  max: number;
};

const PriceFacet = ({ min, max }: PriceFacetProps) => {
  return (
    <SearchResultsFacetValueRange
      max={max}
      min={min}
      autoAdjustValues={false}
      className="sitecore-range-facet-root"
    >
      <RangeFacet.Track className="sitecore-range-facet-track">
        <RangeFacet.Range className="sitecore-range-facet-range" />
      </RangeFacet.Track>
      <RangeFacet.Start className="sitecore-range-facet-start">
        {(value) => <span>${value}</span>}
      </RangeFacet.Start>
      <RangeFacet.End className="sitecore-range-facet-end">
        {(value) => <span>${value}</span>}
      </RangeFacet.End>
    </SearchResultsFacetValueRange>
  );
};
const Facets = ({ facets }: SearchFacetsProps) => {
  const { onFacetClick } = useSearchResultsActions();
  return (
    <SearchResultsAccordionFacets
      defaultFacetTypesExpandedList={[]}
      onFacetValueClick={onFacetClick}
      className="sitecore-accordion-facets-root"
    >
      {facets.map((facet) => (
        <AccordionFacets.Facet
          facetId={facet.name}
          key={facet.name}
          className="sitecore-accordion-facets-facet"
        >
          <AccordionFacets.Header className="sitecore-accordion-header">
            <AccordionFacets.Trigger className="sitecore-accordion-trigger">
              {facet.label} <span>â–¼</span>
            </AccordionFacets.Trigger>
          </AccordionFacets.Header>
          <AccordionFacets.Content>
            <AccordionFacets.ValueList className="sitecore-accordion-value-list">
              {facet.name !== 'price' ? (
                facet.value.map((facetValue, index) => (
                  <FacetItem
                    {...{
                      index,
                      facetValueId: facetValue.id,
                    }}
                    key={facetValue.id}
                    className="sitecore-accordion-item"
                  >
                    <AccordionFacets.ItemCheckbox className="sitecore-accordion-item-checkbox">
                      <AccordionFacets.ItemCheckboxIndicator className="sitecore-accordion-item-checkbox-indicator">
                        <CheckIcon />
                      </AccordionFacets.ItemCheckboxIndicator>
                    </AccordionFacets.ItemCheckbox>
                    <AccordionFacets.ItemLabel className="sitecore-accordion-item-checkbox-label">
                      {facetValue.text} {facetValue.count && `(${facetValue.count})`}
                    </AccordionFacets.ItemLabel>
                  </FacetItem>
                ))
              ) : (
                <PriceFacet
                  min={Math.floor(facet.value[0].min)}
                  max={Math.floor(facet.value[facet.value.length - 1].max)}
                />
              )}
            </AccordionFacets.ValueList>
          </AccordionFacets.Content>
        </AccordionFacets.Facet>
      ))}
    </SearchResultsAccordionFacets>
  );
};
export default Facets;
